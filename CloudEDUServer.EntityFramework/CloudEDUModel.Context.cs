//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace CloudEDUServer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Core.Objects;
    using System.Data.Entity.Infrastructure;

    public partial class CloudEDUEntities : DbContext
    {
        public CloudEDUEntities()
            : base("name=CloudEDUEntities")
        {
        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }

        public virtual DbSet<CATEGORY> CATEGORies { get; set; }
        public virtual DbSet<COMMENT> COMMENTs { get; set; }
        public virtual DbSet<COURSE> COURSEs { get; set; }
        public virtual DbSet<DOCUMENT> DOCUMENTs { get; set; }
        public virtual DbSet<LESSON> LESSONs { get; set; }
        public virtual DbSet<PARENT_GUIDE> PARENT_GUIDE { get; set; }
        public virtual DbSet<RECOMMENDATION> RECOMMENDATIONs { get; set; }
        public virtual DbSet<RES_TYPE> RES_TYPE { get; set; }
        public virtual DbSet<RESOURCE> RESOURCEs { get; set; }
        public virtual DbSet<ATTEND> ATTENDs { get; set; }
        public virtual DbSet<CUSTOMER> CUSTOMERs { get; set; }
        public virtual DbSet<NOTE> NOTEs { get; set; }
        public virtual DbSet<OPR_LOG> OPR_LOG { get; set; }
        public virtual DbSet<MANAGER> MANAGERs { get; set; }
        public virtual DbSet<PERMISSION> PERMISSIONs { get; set; }
        public virtual DbSet<TYPE> TYPEs { get; set; }
        public virtual DbSet<SALEORDER> SALEORDERs { get; set; }
        public virtual DbSet<COMMENT_DET> COMMENT_DET { get; set; }
        public virtual DbSet<COURSE_AVAIL> COURSE_AVAIL { get; set; }
        public virtual DbSet<COURSE_OK> COURSE_OK { get; set; }
        public virtual DbSet<COURSE_PENDING> COURSE_PENDING { get; set; }
        public virtual DbSet<COURSE_RECO_AVAIL> COURSE_RECO_AVAIL { get; set; }
        public virtual DbSet<NOTE_AVAIL> NOTE_AVAIL { get; set; }
        public virtual DbSet<NOTE_SHARABLE> NOTE_SHARABLE { get; set; }
        public virtual DbSet<NOTE_SHAREABLE_AVAIL> NOTE_SHAREABLE_AVAIL { get; set; }
        public virtual DbSet<COURSE_CANCEL> COURSE_CANCEL { get; set; }

        public virtual ObjectResult<COURSE_HOTRANK_Result> COURSE_HOTRANK()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<COURSE_HOTRANK_Result>("COURSE_HOTRANK");
        }

        public virtual ObjectResult<Nullable<decimal>> CreateCourse(Nullable<int> teacher, string title, string intro, Nullable<int> category, Nullable<decimal> price, Nullable<int> pg, string icon_url)
        {
            var teacherParameter = teacher.HasValue ?
                new ObjectParameter("teacher", teacher) :
                new ObjectParameter("teacher", typeof(int));

            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));

            var introParameter = intro != null ?
                new ObjectParameter("intro", intro) :
                new ObjectParameter("intro", typeof(string));

            var categoryParameter = category.HasValue ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(int));

            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));

            var pgParameter = pg.HasValue ?
                new ObjectParameter("pg", pg) :
                new ObjectParameter("pg", typeof(int));

            var icon_urlParameter = icon_url != null ?
                new ObjectParameter("icon_url", icon_url) :
                new ObjectParameter("icon_url", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("CreateCourse", teacherParameter, titleParameter, introParameter, categoryParameter, priceParameter, pgParameter, icon_urlParameter);
        }

        public virtual ObjectResult<Nullable<decimal>> CreateLesson(Nullable<int> course_id, string title, Nullable<int> number, string content)
        {
            var course_idParameter = course_id.HasValue ?
                new ObjectParameter("course_id", course_id) :
                new ObjectParameter("course_id", typeof(int));

            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));

            var numberParameter = number.HasValue ?
                new ObjectParameter("number", number) :
                new ObjectParameter("number", typeof(int));

            var contentParameter = content != null ?
                new ObjectParameter("content", content) :
                new ObjectParameter("content", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("CreateLesson", course_idParameter, titleParameter, numberParameter, contentParameter);
        }

        public virtual int EnrollCourse(Nullable<int> course_id, Nullable<int> customer_id)
        {
            var course_idParameter = course_id.HasValue ?
                new ObjectParameter("course_id", course_id) :
                new ObjectParameter("course_id", typeof(int));

            var customer_idParameter = customer_id.HasValue ?
                new ObjectParameter("customer_id", customer_id) :
                new ObjectParameter("customer_id", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EnrollCourse", course_idParameter, customer_idParameter);
        }

        public virtual int AddDBLog(string opr, string mSG)
        {
            var oprParameter = opr != null ?
                new ObjectParameter("opr", opr) :
                new ObjectParameter("opr", typeof(string));

            var mSGParameter = mSG != null ?
                new ObjectParameter("MSG", mSG) :
                new ObjectParameter("MSG", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddDBLog", oprParameter, mSGParameter);
        }

        public virtual int RefreshRate(Nullable<int> crs_id)
        {
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("crs_id", crs_id) :
                new ObjectParameter("crs_id", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RefreshRate", crs_idParameter);
        }
    }
}
